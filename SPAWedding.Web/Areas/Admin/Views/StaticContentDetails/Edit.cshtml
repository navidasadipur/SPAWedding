@model SPAWedding.Core.Models.StaticContentDetail
@using SPAWedding.Core.Utility;

@{
    ViewBag.Title = "جزئیات محتوا";
}
<input type="hidden" id="nav_active" value="static_content">
<input type="hidden" id="nav_item_active" value="content">
@{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>خطا!</strong> @ViewBag.Message
        </div>
    }
}
<div class="col-lg-12">
    <div class="card card-custom gutter-b">
        <div class="card-header">
            <h3 class="card-title">
                ویرایش محتوا
            </h3>
        </div>
        @using (Html.BeginForm("Edit", "StaticContentDetails", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Image)
                @Html.HiddenFor(model => model.InsertDate)
                @Html.HiddenFor(model => model.InsertUser)
                @*@Html.HiddenFor(model => model.StaticContentTypeId)*@
                @*<div class="form-group">
                        <label>نوع محتوا</label>
                        <div class="col-md-5">
                            <h3>@Model.StaticContentType.Name</h3>
                            @@Html.DropDownList("StaticContentTypeId", null, htmlAttributes: new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.StaticContentTypeId, "", new {@class = "form-text text-danger"})
                        </div>
                    </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.StaticContentTypeId, "نوع محتوا", new { })
                    <div class="col-md-5">
                        @Html.DropDownList("StaticContentTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StaticContentTypeId, "", new { @class = "form-text text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "form-text text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-label">تصویر</label>
                    <div class="col-lg-6 col-md-12 col-sm-12">
                        <div class="image-input image-input-outline" id="static-content-image">
                            <div class="image-input-wrapper" style="background-image: url(/Files/StaticContentImages/Image/@Model.Image)"></div>

                            <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="آپلود تصویر">
                                <i class="fa fa-pen icon-sm text-muted"></i>
                                <input type="file" name="StaticContentDetailImage" accept=".png, .jpg, .jpeg" />
                                <input type="hidden" name="static-content_image_remove" />
                            </label>

                            <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="cancel" data-toggle="tooltip" title="حذف تصویر">
                                <i class="ki ki-bold-close icon-xs text-muted"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, new { })
                    @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "form-text text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new { })
                    @if (Model.Id == (int)StaticContents.ContactUsMap)
                    {
                        <a href="https://www.embedgooglemap.net/" class="text-decoration-none" style="font-size: 0.85rem;">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
                                <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"></path>
                            </svg>
                            لینک دریافت نقشه
                        </a>
                    }

                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "form-text text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Link, new { })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.Link, "", new { @class = "form-text text-danger" })
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <a href="@Url.Action("Index")" class="btn btn-secondary">انصراف</a>
                <input type="submit" value="ثبت" class="btn btn-primary mr-2" />
            </div>
        }
    </div>
</div>
<style>
    .image-input .image-input-wrapper {
        width: 200px;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="/ckeditor/ckeditor.js"></script>
    <script src="/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#Description').ckeditor();

        });
        new KTImageInput('static-content-image');
    </script>
}